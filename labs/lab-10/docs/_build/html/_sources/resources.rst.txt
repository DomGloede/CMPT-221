.. _`Resources`:

Resources
=========
This section describes class and functions private to <application-name>. It is intended to document how the application works

labs.lab-1
----------
Lab #1 - Creating a Pull Request
In this class, you will be using pull requests for two things:
- Submitting labs
- Collaboration in your group project

labs.lab-2
----------
Lab #2 - Pip & Virtual Environments
Pip is installed with Python and enables us to install packages in our programs that aren't already included with Python by default. When you install packages with Pip, they're installed globally, which means they are available to all the projects you create on your computer.

labs.lab-3
----------
Lab #3 - Creating & Connecting to a Postgres DB
In order to connect to a database, you need to have a database. We'll be creating our database in Postgres, so go ahead and download pgAdmin4: https://www.pgadmin.org/download/. Open the application and follow the set-up instructions.

labs.lab-4
----------
Lab #4 - Writing SQL Queries
Lab 3 must be complete, Last week, you connected to the marist database using flask and sqlalchemy. This week, you are going to write some SQL queries to interact with one of those tables.
Structured Query Language (SQL) is a programming language that uses short blocks of code called queries to manage and interact with the data in relational databases.

labs.lab-5
----------
Lab #5 - Build an Intentionally Bad GUI
Create an intentionally bad GUI that has:
- at least 3 webpages
- a navigation method
- at least one photo
- an external style sheet (style.css)

labs.lab-6
----------
Lab #5 - Build an Intentionally Bad GUI
Create a login form that requires a user's email and password.
- if the password matches, the user needs to be routed somewhere (Anywhere but the login page)
- if the password doesn't match, route the user to the login page (We will cover validation in the next lab)

labs.lab-7
----------
Lab #7 - Input validation, sanitization, error handling, & logging
add server side input to validate that the first and last name fields contain only letters, and alert the user if their value is invalid

labs.lab-8
----------
Lab #8 - Javascript
Follow wk 10 - javascript slides to complete the lab

labs.lab-9
----------
Lab #9 - Unit Tests
Write 5 Unit Test Cases Using Pytest in tests/test.py
- Create at least one fixture in tests/conftest.py to use in your test
- Create at least one test case that is expected to fail
- Create at least one test case that injects a critical error

labs.lab-10
-----------
Lab #10 - Documentation
Pip install sphinx, and add the following pages to the content in your toctree in index.rst:
- introduction.rst
- development.rst
- resources.rst
- troubleshooting.rst
Then add content to the .rst files and then create and deploy documentation for the CMPT221 lab repository by following the prompts in the .rst templates provided.